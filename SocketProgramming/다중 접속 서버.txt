멀티 프로세스 기반 서버

1. 다수의 프로세스를 생성하는 방식으로 서비스 제공
2. 클라이언트 요청 시, 신규 프로세스 생성해 서비스 제공
- 서버 프로세스는 accept 함수를 호출해 클라이언트 연결 요청 수락
- 신규 생성된 소켓 디스크립터를 자식 프로세스가 이용하여 클라이언트와 통신함
3. 프로세스 = 실행 중인 프로그램
4. 프로세스 ID는 실행 중인 프로세스의 정수형 식별자로 일명 PID



멀티 플렉싱 기반 서버

1. 입출력 대상을 묶어서 관리하는 방식으로 서비스를 제공
2. 프로세스의 생성을 동반하지 않으면서 다수 클라이언트에게 서비스 제공
3. 하나의 전송로를 여러 사용자가 동시에 사용해 효율성을 극대화
4. 하나의 프로세스를 이용해서 둘 이상의 클라이언트에게 서비스를 제공하는 방법
5. select 함수를 이용함



멀티 쓰레딩 기반 서버

1. 하나의 프로세스에서 다수의 쓰레드를 생성해 클라이언트의 요청을 처리하는 방식
2. 쓰레드는 '실행 흐름'이라 부르며, 동일 프로세스 내의 자원을 공유하기 때문에 쓰레드 간 전환이 빠름
3. I/O에 의한 대기가 많은 경우 멀티 쓰레드 프로그램이 처리성능을 향상시킬 수 있음


fork 함수 이용


1. 새로운 프로세스를 만드는 방법으로 fork함수를 호출함
- fork를 호출한 프로세스의 복사본 생성
- 모든 메모리 공간을 그대로 복사
- 똑같은 프로그램을 완전히 독립된 프로세스가 실행

2. fork함수는 부모 프로세스를 복제하여 자식 프로세스를 생성하기 때문에, 부모 프로세스가 사용하는 2배 메모리 공간을 요구하여, 메모리 부족 현상 발생
- 부모 프로세스와 자식 프로세스가 모두 동일한 가상 메모리를 보도록 하는 vfork 함수가 제공
- fork - exec 함수 호출을 통해 프로그램을 실행하는 경우, 여러 문제점을 해결한 posix_spwan 함수가 표준으로 사용

3. fork함수는 부모 프로세스의 모든 상태 정보를 자식 프로세스에게 상속시키므로, 원하지 않는 결과 유발할 수도 있음

4. 프로세스 ID를 알기 위해, getpid, getppid 같은 함수 사용

