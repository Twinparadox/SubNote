### 변수 관련 지정자

## Type specifier

- 기억 장소의 크기와 데이터 표현 방법을 지정,
- limits.h에서 각 형태의 최대, 최소 정의

void, char, short, int, long, float, double, signed, unsigned, struct, union, enum


## Type qualifier
대상체의 특별한 성질 지정
const : 변수의 상수화
no-cache(최적화와 관련된 특성)


## Storage class specifier

- 기억 장소의 종류 지정, 이에 따라 변수의 특성과 유효 시간이 결정됨
- auto, register, static, extern

# auto
메모리 : stack
선언 : 함수 내부, 블럭 안
유효범위 : 선언한 함수, 블럭 안. / 변수 중에서 가장 유효 범위의 제약을 받음
초기화 : 초기화가 필요한 경우 초기화 문장으로만 가능, 생략 시 쓰레기 값
유효 시간 : 선언한 함수, 블럭의 유효시간과 동일

# extern
2가지 의미가 있음(보통 지정자 생략) => 선언 위치에 따라 구분
다른 모듈에서 선언된 전역 변수를 끌어쓰겠다는 의미
지정자 : extern(전역변수로 사용 시 생략 가능)
메모리 : static
선언 : 함수 외부
유효 범위 : 함수 외부 뿐 아니라 파일 밖에서도 유효, 변수 중 가장 유효 범위 큼
초기화 : 초기화 문장 없으면 0으로 자동 초기화
유효 시간 : 프로그램의 생명 시간과 동일

# static
전역 변수의 성질을 갖는 지역 변수로 활용(전역변수와 거의 유사하나 범위에서 차이, 외부 파일에서 접근 불가)
지정자 : static
메모리 : static
선언 : 지역 - 함수 내부, 전역 - 함수 외부
유효 범위 : 함수 내부/함수 외부, 파일 외부에서 접근 불가
초기화 : 초기화 문장 없으면 0으로 자동 초기화
유효 시간 : 프로그램의 생명 시간과 동일

#register
지정자 : register
메모리 : register
선언 : 함수 내부
유효 범위 : 선언된 함수, 블럭 안
초기화 : 초기화가 필요한 경우 초기화 문장으로만 가능, 생략 시 쓰레기 값
유효 시간 : 선언한 함수나 블럭의 유효 시간과 동일


*register
CPU에 내장된 메모리로 시스템에서 가장 빠른 메모리
제한적인 개수 때문에, 반드시 register에 저장된다는 보장 없음
자주 반복적으로 사용되는 변수에 사용 시 효과적
나머지 특성은 auto와 유사


