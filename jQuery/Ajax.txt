### Ajax

- Asynchronous JavaScript and XML
- 구현 방식을 의미
- 전체 웹 문서를 재로딩하지 않고, 서버와 데이터 교환하며 웹 문서의 부분을 업데이트
- 기존 인터넷 표준안을 기반으로 함
- XMLHttpRequestobject : 서버와 비동기적 데이터 교환
- JavaScript/DOM : 정보 출력 위해 사용
- CSS : 자료 스타일 지정
- CSV, XML, JSON : 데이터를 전송 위해 자주 사용되는 형식
- 검색 사이트의 자동 완성 기능


## CSV
- 각 항목을 쉼표로 구분해, 데이터 표현
- 추가 정보 포함하지 않아 작은 용량으로 많은 양의 정보 전송 가능하나, 가독성 떨어짐

## JSON
- JavaScript에서 사용하는 객체 형태로 데이터 표현
- 가독성 좋고, 파일 용량이 작아 Ajax에서 주로 사용
- 객체, 배열, 문자열, 숫자, 불린, null만 사용 가능하며, 문자열은 반드시 큰따옴표 사용
- 데이터양 방대해지면 추출속도가 떨어짐

## XML
- HTML처럼 태그 이용해 데이터 표현
- 가독성은 좋으나, 태그로 인해 파일 용량 커짐


* 서버와 클라이언트의 통신 시 사용하는 파일 형식은 상황에 따라 적합한 것을 선택해 사용할 것.



## Node.js
- Chrome V8 Engine 기반의, 서버 사이드 플랫폼
- Web Browser가 아닌 곳에서 JavaaScript 이용한 프로그램이 가능하게 함

# 내장 모듈
- Node.js에서 기본적으로 제공함
- api 문서에서 확인 가능함

# OS 모듈
- OS와 관련된 정보 제공
- require('os')를 이용해 모듈 사용
- os.EOL - OS의 개행 문자 정의하는 상수
- OS 정보 확인 가능한 메서드 제공

# 외장 모듈
- Node.js에서 제공하지 않는 기능을 유저들이 제작
- NPM(Node Packaged Modules)에서 확인 가능
- 추가할 외부 모듈은 반드시 설치해야 사용 가능